from PIL import Image, ImageDraw, ImageFont

# Python version 3.8

def wrap_text(text, max_width, font):
    lines = []
    words = text.split(' ')
    current_line = ''
    for word in words:
        test_line = current_line + word + ' '
        line_width, _ = font.getsize(test_line)
        if line_width <= max_width:
            current_line = test_line
        else:
            lines.append(current_line[:-1])
            current_line = word + ' '

    lines.append(current_line[:-1])
    return lines

def add_text_to_image(image, sentence):
    # Load a suitable font with the desired size
    font_size = 75
    font = ImageFont.truetype("THE BOLD FONT.ttf", font_size)

    # Apply line wrap if the text is longer than the image width
    max_width = int(image.width * 0.9)
    wrapped_text = wrap_text(sentence, max_width, font)

    draw = ImageDraw.Draw(image)
    line_spacing = 1.3  # Adjust this value based on your needs
    x = (image.width - max_width) // 2
    y = (image.height - int(font_size * len(wrapped_text) * line_spacing)) // 2

    for line in wrapped_text:
        line_width, _ = font.getsize(line)
        draw.text(((image.width - line_width) // 2, y), line, "white", font=font)
        y += int(font_size * line_spacing)
    # image.save("output.jpg")

with open('text.txt', 'r') as file:
    sentences = file.readlines()
sentences = [x.strip() for x in sentences]

i = 0
for item in sentences:
    image = Image.open("bg.jpg")
    sentence = item
    add_text_to_image(image, sentence)
    image.save('generated/'+f'{item}.png')
    i += 1
